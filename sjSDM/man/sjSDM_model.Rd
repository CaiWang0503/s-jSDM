% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sjSDM_model.R
\name{sjSDM_model}
\alias{sjSDM_model}
\title{sjSDM_model}
\usage{
sjSDM_model(input_shape, device = NULL, dtype = "float32")
}
\arguments{
\item{input_shape}{number of predictors}

\item{device}{which device to be used, "cpu" or "gpu"}

\item{dtype}{which data type, most GPU support only 32 bit floats.}
}
\description{
Create a new sjSDM_model
}
\note{
sjSDM_model depends on the anaconda python distribution and pytorch, which need to be installed before being able to use the sjSDM function. See \code{\link{install_sjSDM}} for details.
}
\examples{
\donttest{
com = simulate_SDM(env = 3L, species = 5L, sites = 100L)
X = com$env_weights
Y = com$response

# the activation function in the last layer must be linear (NULL)
model = sjSDM_model(input_shape = 3L)
model \%>\% 
  layer_dense(units = 10L, activation = "tanh") \%>\% 
  layer_dense(units = 10L, activation = "relu") \%>\% 
  layer_dense(units = 5L) 

model \%>\% 
  compile(df = 50L, 
          optimizer = optimizer_adamax(learning_rate = 0.01), 
          l1_cov = 0.0001, 
          l2_cov = 0.0001)

model \%>\% 
  summary

model \%>\% 
  fit(X = X, Y = Y, epochs = 10L, batch_size = 10L)

# species association matrix:
sp = getCov(model)

# you can also continue training:
model \%>\% 
  fit(X = X, Y = Y, epochs = 10L, batch_size = 10L)

weights = getWeights(model)

}
}
\seealso{
\code{\link{layer_dense}},  \code{\link{compile}},  \code{\link{fit}},  \code{\link{predict.sjSDM_model}},  \code{\link{summary.sjSDM_model}}, \code{\link{getWeights.sjSDM_model}}, \code{\link{setWeights.sjSDM_model}}, , \code{\link{plot.sjSDM_model}}
}
